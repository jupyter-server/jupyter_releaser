name: Tests
on:
  push:
    branches: ["main"]
  pull_request:

defaults:
  run:
    shell: bash -eux {0}

env:
  PYTHONDONTWRITEBYTECODE: 1

jobs:
  # Run "pre-commit run --all-files --hook-stage=manual"
  pre-commit:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: pre-commit/action@v2.0.0
        with:
          extra_args: --all-files --hook-stage=manual
      - name: Help message if pre-commit fail
        if: ${{ failure() }}
        run: |
          echo "You can install pre-commit hooks to automatically run formatting"
          echo "on each commit with:"
          echo "    pre-commit install"
          echo "or you can run by hand on staged files with"
          echo "    pre-commit run"
          echo "or after-the-fact on already committed files with"
          echo "    pre-commit run --all-files --hook-stage=manual"

  check-links:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/check-links@v1

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Run the tests with coverage on Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          hatch run cov:test -n auto || hatch run test:test --lf
          pip install codecov
          codecov

      - name: Run the tests on Windows and MacOS
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: hatch run test:test -s -n auto || hatch run test:test -s --lf

  generate-changelog:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RH_REPOSITORY: jupyter-server/jupyter_releaser
          RH_SINCE: v0.10.2
          RH_UNTIL: v0.10.3
        run: |
          set -eux
          pip install -e .
          python -m jupyter_releaser.actions.generate-changelog
          cat CHANGELOG_ENTRY.md
          # Check for version entry contents
          cat CHANGELOG_ENTRY.md | grep -q "#234"
          cat CHANGELOG_ENTRY.md | grep -q "compare/${RH_SINCE}...${RH_UNTIL}"
          # make sure it works with different settings
          export RH_SINCE=
          export RH_UNTIL=
          export RH_CONVERT_TO_RST=true
          sudo apt-get install pandoc
          pip install pypandoc
          python -m jupyter_releaser.actions.generate-changelog
          cat CHANGELOG_ENTRY.md

  docs:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - run: hatch run docs:build

  check_local_actions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: prep-release
        uses: ./.github/actions/prep-release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true

      - name: populate-release
        uses: ./.github/actions/populate-release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release_url: ${{ steps.prep-release.outputs.release_url }}
          dry_run: true

      - name: publish-release
        uses: ./.github/actions/finalize-release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release_url: ${{ steps.populate-release.outputs.release_url }}
          dry_run: true

  check: # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - check-links
      - test
      - docs
      - pre-commit
      - check_local_actions
      - generate-changelog
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
