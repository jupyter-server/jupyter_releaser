name: Tests
on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  # Run "pre-commit run --all-files --hook-stage=manual"
  pre-commit:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: pre-commit/action@v2.0.0
        with:
          extra_args: --all-files --hook-stage=manual
      - name: Help message if pre-commit fail
        if: ${{ failure() }}
        run: |
          echo "You can install pre-commit hooks to automatically run formatting"
          echo "on each commit with:"
          echo "    pre-commit install"
          echo "or you can run by hand on staged files with"
          echo "    pre-commit run"
          echo "or after-the-fact on already committed files with"
          echo "    pre-commit run --all-files --hook-stage=manual"

  check-links:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: ./.github/actions/common

      - name: Check Links
        uses: ./.github/actions/check-links

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.10"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: ./.github/actions/common

      - name: Install the Test dependencies
        run: |
          pip install -e .[test] codecov

      - name: Run the tests with coverage on Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          python -m pytest -vv --cov jupyter_releaser --cov-branch --cov-report term-missing:skip-covered

      - name: Run the tests on Windows and macOS
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: |
          python -m pytest -vv -s

      - name: Verify the Generate Changelog Action
        if: ${{ matrix.os == 'ubuntu' }}
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RH_REPOSITORY: jupyter-server/jupyter_releaser
          RH_SINCE: v0.10.2
          RH_UNTIL: v0.10.3
        run: |
          set -eux
          python -m jupyter_releaser.actions.generate-changelog
          cat CHANGELOG_ENTRY.md
          # Check for version entry contents
          cat CHANGELOG_ENTRY.md | grep -q "#234"
          cat CHANGELOG_ENTRY.md | grep -q "compare/${RH_SINCE}...${RH_UNTIL}"
          # make sure it works with different settings
          export RH_SINCE=
          export RH_UNTIL=
          export RH_CONVERT_TO_RST=true
          sudo apt-get install pandoc
          pip install pypandoc
          python -m jupyter_releaser.actions.generate-changelog
          cat CHANGELOG_ENTRY.md

      - name: Coverage
        run: |
          codecov

  docs:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: ./.github/actions/common

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          activate-environment: jupyter_releaser_documentation
          environment-file: docs/environment.yml
          python-version: "3.10"
          auto-activate-base: false

      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('docs/environment.yml') }}

      - name: Build docs
        run: |
          set -eux
          pip install .
          pushd docs
          make html
          popd

  check: # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - check-links
      - test
      - docs
      - pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
