name: "Check Release"
description: "Run through a dry run release cycle"
inputs:
  token:
    description: "GitHub access token"
    required: true
  version_spec:
    description: "New Version Specifier"
    required: false
    default: ""
  steps_to_skip:
    description: "Comma separated list of steps to skip"
    required: false
runs:
  using: "composite"
  steps:
    - shell: bash -eux {0}
      id: install-releaser
      run: |
        # Install Jupyter Releaser from git unless we are testing Releaser itself
        if ! command -v jupyter-releaser &> /dev/null
        then
            pip install -q git+https://github.com/jupyter-server/jupyter_releaser.git@v2
        fi

    - id: prep-release
      shell: bash -eux {0}
      run: |
        export RH_DRY_RUN="true"
        export GITHUB_ACCESS_TOKEN=${{ inputs.token }}
        export RH_VERSION_SPEC=${{ inputs.version_spec }}
        export RH_STEPS_TO_SKIP=${{ inputs.steps_to_skip }}
        python -m jupyter_releaser.actions.prep_release

    - id: populate-release
      shell: bash -eux {0}
      run: |
        export RH_DRY_RUN="true"
        export GITHUB_ACCESS_TOKEN=${{ inputs.token }}
        export RH_RELEASE_URL=${{ steps.prep-release.outputs.release_url }}
        export RH_STEPS_TO_SKIP=${{ inputs.steps_to_skip }}
        export YARN_UNSAFE_HTTP_WHITELIST=0.0.0.0
        python -m jupyter_releaser.actions.populate_release

    - id: finalize-release
      shell: bash -eux {0}
      run: |
        export RH_DRY_RUN="true"
        export GITHUB_ACCESS_TOKEN=${{ inputs.token }}
        export RH_RELEASE_URL=${{ steps.populate-release.outputs.release_url }}
        export RH_STEPS_TO_SKIP=${{ inputs.steps_to_skip }}
        python -m jupyter_releaser.actions.finalize_release
